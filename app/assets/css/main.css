/* Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap');

/* Bootstrap Icons */
@import url('https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css');

/* Font Awesome */
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css');

/* Import main styles */
@import './gameplex.css';

@import 'swiper/swiper.css';

@import 'tailwindcss';
@import '@nuxt/ui';

:root {
    --n2: 240, 240, 240; /* Light Gray */
}

/* Animated border utility for highlight cards */
.animated-border {
    position: relative;
}
.animated-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: linear-gradient(
        120deg,
        rgba(0, 200, 255, 0.85),
        rgba(0, 120, 255, 0.15),
        rgba(0, 200, 255, 0.85)
    );
    -webkit-mask:
        linear-gradient(#000 0 0) content-box,
        linear-gradient(#000 0 0);
    mask:
        linear-gradient(#000 0 0) content-box,
        linear-gradient(#000 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    -webkit-animation: gp-border-rotate 7s linear infinite;
    animation: gp-border-rotate 7s linear infinite;
}
@-webkit-keyframes gp-border-rotate {
    to {
        -webkit-filter: hue-rotate(360deg);
        filter: hue-rotate(360deg);
    }
}
@keyframes gp-border-rotate {
    to {
        -webkit-filter: hue-rotate(360deg);
        filter: hue-rotate(360deg);
    }
}

/* SplitText performance enhancements */
.gp-char,
.gp-word,
.gp-line {
    will-change: transform, opacity;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-font-smoothing: antialiased;
}

/* body {
  overflow: hidden !important;
} */

.drag-none {
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
}

@theme {
    --color-primary: rgb(var(--p1));
    --color-secondary: rgb(var(--n2));
}
